{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","selector","targetDate","updateMarkup","_isActive","_intervalId","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","clearInterval","pad","Math","floor","timer1","writeTime","innerHTML","value","length","String","padStart","start"],"mappings":";AAsEC,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtED,IAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,YAC7BC,MAAOF,SAASC,cAAc,aAC9BE,KAAMH,SAASC,cAAc,YAC7BG,KAAMJ,SAASC,cAAc,aAG3BI,EAAAA,WACkD,SAAA,EAAA,GAAtCC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,aAAgB,EAAA,KAAA,GAC3CF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,aAAeA,EACfC,KAAAA,WAAY,EACZC,KAAAA,YAAc,KAyD1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAtDG,MAAA,WAAQ,IAAA,EAAA,KACA,KAAKD,YAIJA,KAAAA,WAAY,EACZC,KAAAA,YAAcC,YAAY,WACrBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKR,WAAaK,EAC9BI,EAAO,EAAKC,kBAAkBF,GACpC,EAAKP,aAAaQ,IACpB,QA2CT,CAAA,IAAA,OAxCG,MAAA,WACS,KAAKP,YAILA,KAAAA,WAAY,EACjBS,cAAc,KAAKR,gBAkC1B,CAAA,IAAA,oBA/BG,MAAA,SAAkBM,GAMP,MAAA,CAAEjB,KALIoB,EAAIC,KAAKC,MAAML,EAAQ,QAKrBd,MAJDiB,EAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAIzCb,KAHTgB,EAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAG7BZ,KAFfe,EAAIC,KAAKC,MAAOL,EAAQ,IAAc,WA2B1D,EA/DKX,GA2CAiB,EAAS,IAAIjB,EAAe,CAC9BC,SAAU,WACVC,WAAY,IAAIM,KAAK,gBACrBL,aAAce,IAKlB,SAASA,EAAuC,GAA3BxB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACpCN,EAAKC,KAAKyB,UAAYzB,EACtBD,EAAKI,MAAMsB,UAAYtB,EACvBJ,EAAKK,KAAKqB,UAAYrB,EACtBL,EAAKM,KAAKoB,UAAYpB,EAG1B,SAASe,EAAIM,GACLC,OAAAA,OAAOD,MAAQ,EACRA,EAEJE,OAAOF,GAAOG,SAAS,EAAG,KAbrCN,EAAOO","file":"src.460451c3.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    days: document.querySelector('.js-days'),\n    hours: document.querySelector('.js-hours'),\n    mins: document.querySelector('.js-mins'),\n    secs: document.querySelector('.js-secs'),\n}\n\nclass CountdownTimer {\n    constructor({ selector, targetDate, updateMarkup }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.updateMarkup = updateMarkup;\n        this._isActive = false;\n        this._intervalId = null;\n    }\n\n    start() {\n        if (this._isActive) {\n            return;\n        }\n\n        this._isActive = true;\n        this._intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const time = this.getTimeComponents(deltaTime);\n            this.updateMarkup(time);\n        },1000)\n    }\n\n    stop() {\n        if (!this._isActive) {\n            return;\n        }\n\n        this._isActive = false;\n        clearInterval(this._intervalId)\n    }\n\n    getTimeComponents(time) {\n        const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    }\n}\n\n\nconst timer1 = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 25, 2021'),\n    updateMarkup: writeTime\n});\n\ntimer1.start()\n\nfunction writeTime({ days, hours, mins, secs }) {\n    refs.days.innerHTML = days;\n    refs.hours.innerHTML = hours;\n    refs.mins.innerHTML = mins;\n    refs.secs.innerHTML = secs;\n}\n\nfunction pad(value) {\n    if (length.value > 2) {\n        return value;\n    }\n    return String(value).padStart(2, '0');\n}"]}