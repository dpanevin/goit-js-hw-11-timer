{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","selector","targetDate","updateMarkup","_isActive","_intervalId","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","clearInterval","pad","Math","floor","timer1","writeTime","start","innerHTML","value","length","String","padStart"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    days: document.querySelector('.js-days'),\n    hours: document.querySelector('.js-hours'),\n    mins: document.querySelector('.js-mins'),\n    secs: document.querySelector('.js-secs'),\n}\n\nclass CountdownTimer {\n    constructor({ selector, targetDate, updateMarkup }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.updateMarkup = updateMarkup;\n        this._isActive = false;\n        this._intervalId = null;\n    }\n\n    start() {\n        if (this._isActive) {\n            return;\n        }\n\n        this._isActive = true;\n        this._intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const time = this.getTimeComponents(deltaTime);\n            this.updateMarkup(time);\n        },1000)\n    }\n\n    stop() {\n        if (!this._isActive) {\n            return;\n        }\n\n        this._isActive = false;\n        clearInterval(this._intervalId)\n    }\n\n    getTimeComponents(time) {\n        const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    }\n}\n\n\nconst timer1 = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 25, 2021'),\n    updateMarkup: writeTime\n});\n\ntimer1.start()\n\nfunction writeTime({ days, hours, mins, secs }) {\n    refs.days.innerHTML = days;\n    refs.hours.innerHTML = hours;\n    refs.mins.innerHTML = mins;\n    refs.secs.innerHTML = secs;\n}\n\nfunction pad(value) {\n    if (length.value > 2) {\n        return value;\n    }\n    return String(value).padStart(2, '0');\n}"]}