{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","selector","targetDate","_isActive","_intervalId","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","updateMarkup","clearInterval","value","length","String","padStart","pad","Math","floor","innerHTML","timer1","start"],"mappings":";AAoEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EApEA,IAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,YAC7BC,MAAOF,SAASC,cAAc,aAC9BE,KAAMH,SAASC,cAAc,YAC7BG,KAAMJ,SAASC,cAAc,aAG3BI,EAAAA,WACoC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC7BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,WAAY,EACZC,KAAAA,YAAc,KAwD3B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QArDI,MAAA,WAAQ,IAAA,EAAA,KACA,KAAKD,YAIJA,KAAAA,WAAY,EACZC,KAAAA,YAAcC,YAAY,WACrBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKP,WAAaI,EAC9BI,EAAO,EAAKC,kBAAkBF,GACpC,EAAKG,aAAaF,IACpB,QA0CV,CAAA,IAAA,OAvCI,MAAA,WACS,KAAKP,YAILA,KAAAA,WAAY,EACjBU,cAAc,KAAKT,gBAiC3B,CAAA,IAAA,MA9BI,MAAA,SAAIU,GACAC,OAAAA,OAAOD,MAAQ,EACRA,EAEJE,OAAOF,GAAOG,SAAS,EAAG,OA0BrC,CAAA,IAAA,oBAvBI,MAAA,SAAkBP,GAMP,MAAA,CAAEhB,KALI,KAAKwB,IAAIC,KAAKC,MAAMV,EAAQ,QAK1Bb,MAJD,KAAKqB,IAAIC,KAAKC,MAAOV,EAAQ,MAAyB,OAI9CZ,KAHT,KAAKoB,IAAIC,KAAKC,MAAOV,EAAQ,KAAoB,MAGlCX,KAFf,KAAKmB,IAAIC,KAAKC,MAAOV,EAAQ,IAAc,SAmBhE,CAAA,IAAA,eAdI,MAAA,SAA0C,GAA3BhB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAClCN,EAAKC,KAAK2B,UAAY3B,EACtBD,EAAKI,MAAMwB,UAAYxB,EACvBJ,EAAKK,KAAKuB,UAAYvB,EACtBL,EAAKM,KAAKsB,UAAYtB,MAU1B,EA7DMC,GAwDAsB,EAAS,IAAItB,EAAe,CAC9BC,SAAU,WACVC,WAAY,IAAIK,KAAK,kBAGzBe,EAAOC","file":"src.1a11a60b.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    days: document.querySelector('.js-days'),\n    hours: document.querySelector('.js-hours'),\n    mins: document.querySelector('.js-mins'),\n    secs: document.querySelector('.js-secs'),\n}\n\nclass CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this._isActive = false;\n        this._intervalId = null;\n    }\n\n    start() {\n        if (this._isActive) {\n            return;\n        }\n\n        this._isActive = true;\n        this._intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const time = this.getTimeComponents(deltaTime);\n            this.updateMarkup(time);\n        },1000)\n    }\n\n    stop() {\n        if (!this._isActive) {\n            return;\n        }\n\n        this._isActive = false;\n        clearInterval(this._intervalId)\n    }\n\n    pad(value) {\n    if (length.value > 2) {\n        return value;\n    }\n    return String(value).padStart(2, '0');\n}\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    }\n\n    updateMarkup({ days, hours, mins, secs }) {\n    refs.days.innerHTML = days;\n    refs.hours.innerHTML = hours;\n    refs.mins.innerHTML = mins;\n    refs.secs.innerHTML = secs;\n}\n}\n\n\nconst timer1 = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 17, 2021')\n});\n\ntimer1.start()"]}